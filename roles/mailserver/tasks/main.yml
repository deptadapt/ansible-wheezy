---
# This role is for the primary email server
# Created by Jeremy McNaughton 2013-08-26
#
# This will install and configure Postfix, Dovecot, and a bunch of related
# tools. 

# This task instructs debconf not to configure Postfix.
# The playbook will supply the necessary Postfix configuration,
# and we don't want debconf to interfere with this, including future
# upgrades of the package.
- name: preseed Postfix for "No configuration"
  shell: echo "postfix postfix/main_mailer_type select No configuration" | debconf-set-selections 

# This task commented out for testing purposes (too slow)
# - name: Make sure APT is up to date
#   apt: update_cache=yes upgrade=yes

# This task demonstrates how to install everything in one go using
# the with_items keyword.
#
# For now I've got it commented out as I am doing prep and clean-up tasks
# for some of these packages.
#
# Also note: PostgreSQL should perhaps be in its own role, with this role
# depending on it.
#
- name: Install Postfix, Dovecot, vmm, postgrey
  apt: pkg={{ item }} state=latest
  with_items:
    - postfix
    - postfix-pgsql
    - dovecot-core
    - dovecot-imapd
    - dovecot-pgsql
    - dovecot-sieve
    - dovecot-managesieved
    - python-crypto
    - vmm
    - postgrey
  notify:
    - Add doveauth group
    - Add doveauth user
    - Add dovemail group
    - Create /srv/mail directory
    - Create /srv/mail subdirectory contents
    - Configure authentication for mailsys in pg_hba.conf
    - Create temp directory for vmm script
    - Copy vmm PostgreSQL database configuration script
    - Execute vmm database config script
    - Remove vmm config tmp directory
    - Start Postfix
    - Start Dovecot

- name: Copy /etc/postfix/main.cf
  template: >
    src=postfix/main.cf.j2
    dest=/etc/postfix/main.cf
    owner=root
    group=root
    mode=0644
  notify:
    - Reload Postfix config

- name: Copy /etc/postfix/master.cf.j2 template
  template: >
    src=postfix/master.cf.j2
    dest=/etc/postfix/master.cf
    owner=root
    group=root
    mode=0644
  notify:
    - Reload Postfix config

- name: Copy /etc/dovecot/dovecot.conf
  copy: >
    src=dovecot/dovecot.conf
    dest=/etc/dovecot/dovecot.conf
    owner=root
    group=root
    mode=0644
  notify:
    - Reload Dovecot config

- name: Copy /etc/dovecot/local.conf j2 template
  template: >
    src=dovecot/local.conf.j2
    dest=/etc/dovecot/local.conf
    owner=root
    group=root
    mode=0644
  notify:
    - Reload Dovecot config

- name: mkdir /etc/dovecot/pgsql
  file: >
    dest=/etc/dovecot/pgsql
    state=directory
    owner=root
    group=dovecot
    mode=0750

- name: Copy /etc/dovecot/pgsql/dovecot-dict-sql.conf.ext j2 template
  template: >
    src=dovecot/dovecot-dict-sql.conf.ext.j2
    dest=/etc/dovecot/pgsql/dovecot-dict-sql.conf.ext
    owner=root
    group=dovecot
    mode=0640
  notify:
    - Reload Dovecot config

- name: Copy /etc/dovecot/pgsql/dovecot-sql.conf.ext j2 template
  template: >
    src=dovecot/dovecot-sql.conf.ext.j2
    dest=/etc/dovecot/pgsql/dovecot-sql.conf.ext
    owner=root
    group=dovecot
    mode=0600
  notify:
    - Reload Dovecot config

- name: Create directory for Postfix PostgreSQL config files.
  file: >
    dest=/etc/postfix/pgsql
    state=directory
    owner=root
    group=postfix
    mode=0750

- name: Copy /etc/postfix/pgsql-*.cf j2 templates
  template: >
    src=postfix/{{ item }}.j2
    dest=/etc/postfix/pgsql/{{ item }}
    owner=root
    group=postfix
    mode=0640
  with_items:
    - pgsql-relocated_maps.cf
    - pgsql-smtpd_sender_login_maps.cf
    - pgsql-transport_maps.cf
    - pgsql-virtual_alias_maps.cf
    - pgsql-virtual_gid_maps.cf
    - pgsql-virtual_mailbox_domains.cf
    - pgsql-virtual_mailbox_maps.cf
    - pgsql-virtual_uid_maps.cf
  notify:
    - Reload Postfix config

- name: Copy /etc/aliases j2 template
  template: >
    src=postfix/aliases
    dest=/etc/aliases
    owner=root
    group=root
    mode=0644
  notify:
    - Generate /etc/aliases
    - Reload Postfix config

- name: Copy /etc/vmm/vmm.cfg
  copy: >
    src=vmm/vmm.cfg
    dest=/etc/vmm/vmm.cfg
    owner=root
    group=vmm
    mode=0640

- name: Copy /etc/vmm/vmm-db.cfg.j2 template
  template: >
    src=vmm/vmm-db.cfg.j2
    dest=/etc/vmm/vmm-db.cfg
    owner=root
    group=vmm
    mode=0640

# Below are optional components. They will only run when host variables they
# rely on are defined.
#
# Installing custom SSL certificates relies on the following host variables.
# If they are absent, the default Debian snakeoil certificate generated by
# the ssl-cert package will be used.
#
# Note that theses files do not need to be anywhere near this Ansible playbook
# directory. Keep them somewhere safe and use absolute paths.
#
# ssl_cert_file: the path to the SSL certificate file on local computer
# ssl_cert_file_name: the file name portion of the path above
# ssl_key_file: the path to the SSL key file on the local computer
# ssl_key_file_name: the file name portion of the path above

- name: Make directory for provided SSL certifcate
  when: ssl_cert_file is defined
  file: >
    dest=/etc/ssl/localcert
    state=directory
    owner=root
    group=root
    mode=0755

- name: Make directory for provided SSL certifcate
  when: ssl_key_file is defined
  file: >
    dest=/etc/ssl/localcert/private
    state=directory
    owner=root
    group=ssl-cert
    mode=0710

- name: Copy SSL certificate to /etc/ssl/localcert
  when: ssl_cert_file is defined
  copy: >
    src={{ ssl_cert_file }}
    dest=/etc/ssl/localcert/
    owner=root
    group=root
    mode=0644
  notify:
    - Reload Postfix config
    - Reload Dovecot config

- name: Copy SSL key to /etc/ssl/localcert/private
  when: ssl_key_file is defined
  copy: >
    src={{ ssl_key_file }}
    dest=/etc/ssl/localcert/private/
    owner=root
    group=ssl-cert
    mode=0640
  notify:
    - Reload Postfix config
    - Reload Dovecot config

- name: Generate Diffie-Hellman parameters for Postfix
  command: openssl dhparam -out /etc/postfix/dh_{{ item }}.pem -2 {{ item }} creates=/etc/postfix/dh_{{ item }}.pem
  with_items:
    - 1024
    - 512

- name: Copy postfix-dh-params script to /etc/cron.weekly
  copy: >
    src=postfix/postfix-dh-params
    dest=/etc/cron.weekly
    owner=root
    group=root
    mode=0755

# Optional OpenDKIM installation
# These tasks will only run if the following host variables are defined. The 
# variables should point to files on the local computer (that is running Ansible).
#
# Note that theses files do not need to be anywhere near this Ansible playbook
# directory. Keep them somewhere safe and use absolute paths.
#
# dkim_install: true
# dkim_keytable_file: the path to the file used in opendkim.conf's KeyTable setting
# dkim_signingtable_file: path to file used with SigningTable setting
# dkim_internal_hosts_file: path to file used with InternalHosts setting
# dkim_private_keys_directory: path to the directory containing the private RSA
#   keys to be used for signing messages.
#

- name: Install OpenDKIM
  when: dkim_install
  apt: pkg=opendkim state=latest

- name: Copy /etc/opendkim.conf
  when: dkim_install
  copy: >
    src=opendkim/opendkim.conf
    dest=/etc/opendkim.conf
    owner=root
    group=root
    mode=0644
  notify:
    - Reload OpenDKIM config

- name: Create /etc/opendkim directory
  when: dkim_install
  file: >
    dest={{ item }}
    state=directory
    owner=opendkim
    group=opendkim
    mode=0700
  with_items:
    - /etc/opendkim
    - /etc/opendkim/private

- name: Copy OpenDKIM KeyTable file
  when:
    - dkim_install
    - dkm_keytable_file is defined
  copy: >
    src={{ dkim_keytable_file }}
    dest=/etc/opendkim
    owner=opendkim
    group=opendkim
    mode=0600
  notify:
    - Reload OpenDKIM config

- name: Copy OpenDKIM SigningTable file
  when:
    - dkim_install
    - dkm_signingtable_file is defined
  copy: >
    src={{ dkim_signingtable_file }}
    dest=/etc/opendkim
    owner=opendkim
    group=opendkim
    mode=0600
  notify:
    - Reload OpenDKIM config

- name: Copy OpenDKIM InternalHosts file
  when:
    - dkim_install
    - dkm_internalhosts_file is defined
  copy: >
    src={{ dkim_internalhosts_file }}
    dest=/etc/opendkim
    owner=opendkim
    group=opendkim
    mode=0600
  notify:
    - Reload OpenDKIM config

# Using a tar ball to copy "recursively" so that the source can be
# defined in a host_var
- name: Copy DKIM private RSA keys tarball
  when:
    - dkim_install
    - dkim_private_kays_tarball
  copy: >
    src={{ dkim_private_keys_tarball }}
    dest=/etc/opendkim/private
    owner=opendkim
    group=opendkim
    mode=0600
  notify:
    - Untar DKIM private RSA keys tarball
    - Set ownership of DKIM private RSA keys
    - Reload OpenDKIM config

# Recommended in Ansible documentation for recursive copying
# - name: Copy DKIM private RSA keys directory
#   when: dkim_private_keys_directory is defined
#   local_action: command rsync -a {{ dkim_private_keys_directory }} {{ inventory_hostname }}:/etc/opendkim/private

# - name: Copy DKIM private RSA keys directory
#  when: dkim_private_keys_directory is defined
#   copy: src={{ item }} dest=/etc/opendkim/private owner=opendkim group=opendkim mode=0600
#   with_fileglob:
#     - /home/jeremy/mail_testing_files/dkim/private/*
#   notify:
#     - Reload OpenDKIM config
