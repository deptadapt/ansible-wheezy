---
# This role will install Duply to perform automated backups.
# There will probably be some variables necessary for the 
# keys that will be needed.
#

- name: Install duply package
  apt: pkg=duply state=present

- name: Create /etc/duply/default directory
  file: >
    dest=/etc/duply/default
    state=directory
    owner=root
    group=root
    mode=0700
#     recurse=yes

- name: Copy GnuPG key pair file
  copy: >
    src={{ duply_prep_directory }}/gpgkeys.asc
    dest=/etc/duply/default/
    owner=root
    group=root
    mode=0600
  notify:
    - Import GnuPG keys


#
# The following four tasks can hopefully be refactored as a
# nested loop.
# http://www.ansibleworks.com/docs/playbooks_loops.html#nested-loops
#
- name: Copy conf.j2 for Duply default profile
  template: >
    src={{ item }}
    dest=/etc/duply/default/conf
    owner=root
    group=root
    mode=0600
  with_first_found:
    - files: conf.j2
      paths:
        - "{{ duply_prep_directory }}/"
        - ../templates

- name: Copy exclude.j2 for Duply default profile
  template: >
    src={{ item }}
    dest=/etc/duply/default/exclude
    owner=root
    group=root
    mode=0600
  with_first_found:
    - files: exclude.j2
      paths:
        - "{{ duply_prep_directory }}/"
        - ../templates

- name: Copy pre.j2 for Duply default profile
  template: >
    src={{ item }}
    dest=/etc/duply/default/pre
    owner=root
    group=root
    mode=0600
  with_first_found:
    - files: pre.j2
      paths:
        - "{{ duply_prep_directory }}/"
        - ../templates
# this is the old way of doing the above:
#  first_available_file:
#    - "{{ duply_prep_directory }}/pre.j2"
#    - pre.j2

- name: Copy post.j2 for Duply default profile
  template: >
    src={{ item }}
    dest=/etc/duply/default/post
    owner=root
    group=root
    mode=0600
  with_first_found:
    - files: post.j2
      paths:
        - "{{ duply_prep_directory }}/"
        - ../templates

- name: Create /root/.ssh directory
  file: >
    dest=/root/.ssh
    state=directory
    owner=root
    group=root
    mode=0700

- name: Copy SSH private key
  copy: >
    src={{ duply_prep_directory }}/id_rsa
    dest=/root/.ssh/id_rsa
    owner=root
    group=root
    mode=0600

- name: Copy SSH public key
  copy: >
    src={{ duply_prep_directory }}/id_rsa.pub
    dest=/root/.ssh/id_rsa.pub
    owner=root
    group=root
    mode=0600

- name: Add backup target's SSH host key to /root/.ssh/known_hosts
  lineinfile: >
    dest=/root/.ssh/known_hosts
    create=yes
    mode=0644
    regexp="^{{ item }}"
    line="{{ item  + ' ' +  target_ssh_host_key_type + ' ' + target_ssh_host_key }}"
  with_items:
    - "{{ target_hostname }}"
    - "{{ target_ip }}"
    - "{{ target_hostname + ',' + target_ip }}"

# "
- debug: var=target_ssh_host_key_type
- debug: var=target_hostname
- debug: var=target_ip
- debug: var=target_ssh_host_key

# "Commenting out the old task to replace it.
# - name: Copy storage target SSH host key file
#   copy: >
#     src={{ duply_prep_directory }}/known_host
#    dest=/root/duply_storage_ssh_host_key
#    owner=root
#    group=root
#    mode=0600
#  notify:
#     - Append /root/.ssh/known_hosts

# This task turned out to be unnecessary.
# - name: Copy /root/.ssh/config j2 template
#   template: >
#     src=ssh_config.j2
#     dest=/root/.ssh/config
#     owner=root
#     group=root
#     mode=0600

- name: Duply full backup
  command: duply default full
  when: duply_suppress_backup is not defined

- name: Add nightly Duply backup to cron
  cron: >
    name=duply_nightly
    hour=3
    minute=10
    job="duply default backup"
    user=root
    state=present

- name: Add weekly Duply full backup to cron
  cron: >
    name=duply_weekly
    hour=5
    minute=0
    weekday=0
    job="duply default full"
    user=root
    state=present

- name: Add weekly Duply purge of old backups to cron
  cron: >
    name=duply_purge
    hour=2
    minute=0
    weekday=4
    job="duply default purge-full --force"
    user=root
    state=present

